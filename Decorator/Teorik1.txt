Dekoratör deseni, sınıfta değişiklik yapmadan ilgili sınıfa dinamik olarak davranış eklememize izin vermektedir. Bu desen, yeni davranış eklerken, kod tabanınızda yani hali hazırda var olan kod bloğunuzda SOC ve OCP prensibine güçlü bir şekilde kullanmamıza izin verir. Ancak aynı zamanda size gerektiğinde davranış ekleme, kaldırma yani modifikasyon işlemlerinde sizlere esneklik kazandırır.

Dekotatör kalıbının çalışma şekli. Önce davranış eklemek istediğimiz bir sınıfa sahip olmamız gerekmektedir. Bu desenin UML diyagramını incelediğimizde ilgili sınıfa Bileşen adını vereceğiz ve bu sınıf decore etmek istediğimiz sınıfı temsil etmektedir. Bu sınıfın arabirimi uygulaması gereken veya dekaratör sınıflarımızın uygulayabileceği veya genişletebileceği ortak bir temel sınıfı genişletmemizi yani modifiye etmemiz gerekir. Pratikte bir interface üzerinden concrete edilen bir arabirimi ile uygulamak daha mantıklı olacaktır. Ardından dekoratör sınıfınız aynı arabirimi uygulayacaktır ve dekoratör sınıfınızdaki yöntem uyguylamaları içinde eklemek istediğiniz herhangi bir yeni davranışı tanımlayacaksınız, bu bir bileşen ise yeni bir sınıf çarak devamda edebilirsiniz. Eklenen yeni davranışı enjeck ederek yolumuza devam ederiz. Ayrıca injection için aynı arabirimi kullanan bir nesneyi alan dekoratör sınıfınızda bir constructor tanımlamanız gerekmektedir. Bu yapı ile dekore edilen nesneyi dekoratör nesnenize geçirmenize ve nihayetinde dekoratör nesnesinin ham halinin bozulmamasının önüne geçmiş olursunuz. Çünkü ham hali yeni decore edilecek nesneler için hazır helde kalmalıdır. Dekoratör nesnenin dekore edilen nesneye bir referans verecektir, bu durumda üretilecek bileşen (component) nesnesi ve ardından gerektiğinde nesenye ve nesneden method çağrılarak kullanılabilinir olmalıdır. 

Somut bir örnek üzerinden düşünürsek, bir silah fabirkam olduğunu ve bu fabrikada M4 rifle ürettiğimi düşünelim. Üretilen bu standart assult tüfeklerini, client ihtiyaçları doğruştusunda oluşturduğu istekler ile modifiye etmektedir. Yani ham halede bulunan çalışan M4 tüfeğini gece yapıalcak operasyona göre modifiye edilmesini örnek olarka verebiliriz. 

Decorator kelimesini duyduğumuzda yukarıdaki örnek gibi bir fikir üzerinde düşünmek ve gerçekte yaptığınız işin birbiri etrafını sarabilen ve gerektiği gibi davranış enjekte eden bir dizi nesne tasarlamak olduğunu anlamakta fayda var. Bir dizi nesne dedim çünkü aynı anda bir yada birden fazla decoratör nesnesini kullanabiliirim, yani herhangi bir sınırım bulunmamaktadır. Birden fazla decoratör nesnesi tanımlayabilir ve kullanabilirsiniz, böylelikle orijinal nesneniz üzerinde herhangi bir değişiklik yapmamış olursunuz. Orijinal nesnenize her decoratör farklı bir davranış ekleyebilir yada tanımlayabilir, bu nedenle SOC ve OCP prensiplerinede sıkı sıkıya uyduğumuz söylemekte fayda var. Yine de tüm decoratör sınfılarımızın orijinal nesnemiz ile aynı arabirim uygulandığından, eklemek istediğimiz davranış için istemci kodunuzu değiştirmeniz gerekebilir. Bu husus dışında gayet güçlü ve kullanılabilir bir desendir.